"""""""""""""""""""""""""""""""
" Behaviour
"""""""""""""""""""""""""""""""

set nocp                       "vim not vi
set ffs=unix,dos,mac           "use unix as the standard file type
set autoread                   "set to auto read when a file is changed from the outside
set title                      "show title on terminal
set ruler                      "always show current position
set laststatus=2               "always show the status line
set lazyredraw                 "don't redraw while executing macros (good performance config)
set showcmd                    "displays commands being typed 
set lines=50 columns=100       "sets intial size of vim window
set number                     "show line numb
set numberwidth=1              "sets how far numbers appear from lhs of screen
set hls                        "highlight search
set incsearch                  "highlight search whilst typing
set ignorecase                 "case insensitive search
set smartcase                  "case sensitive if search term contains capitals
set whichwrap+=<,>,h,l,[,]     "let cursor wrap to lines above/below



" toggle invisible characters
set list
set listchars=tab:▸\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
set showbreak=↪
set nowrap
"→\ alt for Tab Char

" Cursor Change - DOESN'T WORK - DOESN'T RESET VALUE
"if has("autocmd")
 " au InsertEnter * silent execute "!sed -i.bak -e 's/TERMINAL_CURSOR_SHAPE_BLOCK/TERMINAL_CURSOR_SHAPE_BLOCK/' ~/.config/xfce4/terminal/terminalrc"                                                                                          
  "au InsertLeave * silent execute "!sed -i.bak -e 's/TERMINAL_CURSOR_SHAPE_UNDERLINE/TERMINAL_CURSOR_SHAPE_BLOCK/' ~/.config/xfce4/terminal/terminalrc"                                                                                          
  "au VimLeave * silent execute "!sed -i.bak -e 's/TERMINAL_CURSOR_SHAPE_UNDERLINE/TERMINAL_CURSOR_SHAPE_BLOCK/' ~/.config/xfce4/terminal/terminalrc"  
"endif


""""""""""""""""""""""""""""""""
" Colours & Fonts
""""""""""""""""""""""""""""""""

"True Color Support
"if (has("termguicolors"))
 " set termguicolors
"endif

" 256 Color Support
if !has('gui_running')
  set t_Co=256
endif


syntax on                      "syntax enable is the same thing

set background=dark
colorscheme onedark

let g:lightline = {
      \ 'colorscheme': 'Dracula',
      \ }
set noshowmode

""""""""""""""""""""""""""""""""
" Plugins
""""""""""""""""""""""""""""""""
" Specify a directory for plugins
" Make sure you use single quotes
call plug#begin('~/.vim/plugged')



" LighLine Status Bar Plugin
Plug 'itchyny/lightline.vim'

" Vim-CSS-Colours
Plug 'https://github.com/ap/vim-css-color.git'

" OneDark Colorscheme & Lighline theme
Plug 'https://github.com/joshdick/onedark.vim.git'

" NeoDark Colorshceme + LightLine
"Plug 'KeitaNakamura/neodark.vim'

" Palenight Colorscheme
Plug 'drewtempelmeyer/palenight.vim'

" Base16 - Colorschemes
"Plug 'chriskempson/base16-vim'

" Arduino Syntax - Vim-Polyglot 
Plug 'sudar/vim-arduino-syntax'

"C/C++ Syntax
Plug 'octol/vim-cpp-enhanced-highlight'

" NerdTree (File-Explorer)
Plug 'scrooloose/nerdtree/'




" Initialize plugin system
call plug#end()

"""""""""""""""""""""""""""""""
" Formatting
"""""""""""""""""""""""""""""""
" Global settings for all files (but may be overridden in ftplugin).
" 1 tab == 4 sapces
set shiftwidth=4               "same as sw=4
set tabstop=4                  "same as ts=4
set noexpandtab                "ensures tabs are tabs
set autoindent

" Enable filetype plugins
filetype on
filetype plugin on
filetype indent on
set wildignore=*.o,*.hi,*.pyc,*.pdf " ignore complied files etc.


""""""""""""""""""""""""""""""""
" Abbreviations (autocorrect)
""""""""""""""""""""""""""""""""
abbr cosnt const
abbr unit8_t uint8_t
abbr unit16_t uint16_t
abbr unit32_t uint32_t
abbr unit64_t uint64_t


""""""""""""""""""""""""""""""
" Key Mappings
""""""""""""""""""""""""""""""
" scroll the viewport faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" C Initial File Macro (Main function macro + include std i/o)
map <Leader>cdef i/*<CR> PROGRAMM COMMENT<CR><CR>/<CR><CR>#include <stdio.h><CR><CR>int main(int argc, char **argv)<CR>{<CR>return 0;<CR>}<ESC>

" Nerd Tree Key Mapping
map <C-n> :NERDTreeToggle<CR>

" Hard Mode
" Disable Arrow keys & page-up & page-down in Insert mode
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>
imap <PageUp> <nop>
imap <PageDown> <nop>

" Disable Arrow keys in Normal mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
